{{- if not .Values.global.secrets.existingSecretName }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "meteroid.secretsName" . }}
  labels:
    {{- include "meteroid.labels" . | nindent 4 }}
type: Opaque
stringData:
  database-url: {{ if .Values.global.secrets.databaseUrl }}{{ .Values.global.secrets.databaseUrl }}{{ else }}postgresql://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ .Release.Name }}-postgresql:5432/{{ .Values.postgresql.auth.database }}{{ end }}
  jwt-private-key: {{ required "A valid global.secrets.jwtPrivateKey is required" .Values.global.secrets.jwtPrivateKey }}
  internal-api-secret: {{ required "A valid global.secrets.internalApiSecret is required" .Values.global.secrets.internalApiSecret }}
  secrets-crypt-key: {{ required "A valid global.secrets.secretsCryptkey is required" .Values.global.secrets.secretsCryptkey }}
  svix-jwt-token: {{ required "A valid global.secrets.svixJwtToken is required" .Values.global.secrets.svixJwtToken }}
  oauth-google-client-id: {{ required "A valid global.secrets.oauthGoogle.clientId is required" .Values.global.secrets.oauthGoogle.clientId }}
  oauth-google-client-secret: {{ required "A valid global.secrets.oauthGoogle.clientSecret is required" .Values.global.secrets.oauthGoogle.clientSecret }}
  kafka-username: {{ required "A valid global.secrets.kafka.username is required" .Values.global.secrets.kafka.username }}
  kafka-password: {{ required "A valid global.secrets.kafka.password is required" .Values.global.secrets.kafka.password }}
  clickhouse-password: {{ required "A valid global.secrets.clickhouse.password is required" .Values.global.secrets.clickhouse.password }}
{{- end }}
