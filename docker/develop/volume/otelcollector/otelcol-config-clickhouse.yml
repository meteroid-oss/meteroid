# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: otel-collector:4317
      http:
        endpoint: otel-collector:4318
  #        cors:
  #          allowed_origins:
  #            - "http://*"
  #            - "https://*"
  #  docker_stats:
  #    endpoint: unix:///var/run/docker.sock
  #  redis:
  #    endpoint: "valkey-cart:6379"
  #    username: "valkey"
  #    collection_interval: 10s
  # Host metrics
  hostmetrics:
    root_path: /hostfs
    scrapers:
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
      disk:
      load:
      filesystem:
        exclude_mount_points:
          mount_points:
            - /dev/*
            - /proc/*
            - /sys/*
            - /run/k3s/containerd/*
            - /var/lib/docker/*
            - /var/lib/kubelet/*
            - /snap/*
          match_type: regexp
        exclude_fs_types:
          fs_types:
            - autofs
            - binfmt_misc
            - bpf
            - cgroup2
            - configfs
            - debugfs
            - devpts
            - devtmpfs
            - fusectl
            - hugetlbfs
            - iso9660
            - mqueue
            - nsfs
            - overlay
            - proc
            - procfs
            - pstore
            - rpc_pipefs
            - securityfs
            - selinuxfs
            - squashfs
            - sysfs
            - tracefs
          match_type: strict
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
      network:
      paging:
      processes:
      process:
        mute_process_exe_error: true
        mute_process_io_error: true
        mute_process_user_error: true

exporters:
  debug:
  clickhouse:
    endpoint: http://clickhouse:8123
    database: otel
    username: default
    password: "default"          # adjust if you set users
    create_schema: true   # lets exporter create otel_traces/otel_logs/otel_metrics

processors:
  batch:
  transform:
    error_mode: ignore
    trace_statements:
      - context: span
        statements:
          # could be removed when https://github.com/vercel/next.js/pull/64852 is fixed upstream
          - replace_pattern(name, "\\?.*", "")

service:
  pipelines:
    traces:
      receivers: [ otlp ]
      processors: [ transform, batch ]
      exporters: [ clickhouse ]
    metrics:
      # receivers: [hostmetrics, docker_stats, httpcheck/frontend-proxy, otlp, prometheus, redis, spanmetrics]
      receivers: [ hostmetrics, otlp ]
      processors: [ batch ]
      exporters: [ clickhouse ]
    logs:
      receivers: [ otlp ]
      processors: [ transform, batch ]
      exporters: [ debug, clickhouse ]
