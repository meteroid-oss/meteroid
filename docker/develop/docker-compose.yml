x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"
    tag: "{{.Name}}"

volumes:
  pg_data:
  minio_data:
  redpanda_data:

networks:
  meteroid_net:

name: meteroid-dev

services:

  ### Meteroid Dependencies
  meteroid-db:
    image: quay.io/tembo/pg17-pgmq:v1.5.0
    container_name: meteroid-db
    ports:
      - '5432:5432'
    user: postgres
    environment:
      - POSTGRES_USER=${DATABASE_USER:-meteroid}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME:-meteroid}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}' ]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
    networks:
      - meteroid_net

  svix-server:
    image: "docker.io/svix/svix-server:v1.61.0"
    environment:
      SVIX_JWT_SECRET: ${SVIX_JWT_SECRET:-changeMeSecret}
      SVIX_DB_DSN: postgresql://${DATABASE_USER:-meteroid}:${DATABASE_PASSWORD:-meteroid}@pgbouncer/svix
      SVIX_QUEUE_TYPE: "memory"
    ports:
      - "8071:8071"
    depends_on:
      - pgbouncer
    networks:
      - meteroid_net

  pgbouncer:
    image: "docker.io/edoburu/pgbouncer:v1.23.1-p2"
    healthcheck:
      test: "pg_isready -h localhost"
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      DB_HOST: "meteroid-db"
      DB_USER: "meteroid"
      DB_PASSWORD: ${DATABASE_PASSWORD}
      MAX_CLIENT_CONN: 200
      AUTH_TYPE: "scram-sha-256"
    depends_on:
      - meteroid-db
    networks:
      - meteroid_net

  minio:
    image: minio/minio:latest
    environment:
      - MINIO_ROOT_USER=${S3_USER:-meteroid}
      - MINIO_ROOT_PASSWORD=${S3_password:-meteroid}
    command: server /data --console-address ":9001"
    ports:
      - 9002:9000
      - 9001:9001
    volumes:
      - minio_data:/data
    networks:
      - meteroid_net
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 3s
      timeout: 5s
      retries: 5

  createbuckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 ${S3_USER:-meteroid} ${S3_PASSWORD:-meteroid};
      /usr/bin/mc mb myminio/meteroid;
      exit 0;
      "
    networks:
      - meteroid_net

  ### Metering Dependencies
  clickhouse:
    image: clickhouse/clickhouse-server:23.12.1-alpine
    ports:
      - 8123:8123
      - 9000:9000
      - 9009:9009
    environment:
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: default
      CLICKHOUSE_DB: meteroid
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://clickhouse:8123/ping || exit 1
      interval: 5s
      timeout: 3s
      retries: 100
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./volume/clickhouse/config.xml:/develop/clickhouse/config.xml
    networks:
      - meteroid_net
    profiles:
      - metering

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.1
    container_name: redpanda
    hostname: redpanda
    command:
      - redpanda start
      - --smp 1
      - --memory 1G
      - --overprovisioned
      - --node-id 0
      - --kafka-addr INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      - --advertise-kafka-addr INTERNAL://redpanda:29092,EXTERNAL://localhost:9092
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    networks:
      - meteroid_net
    ports:
      - 9092:9092

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:v2.3.1
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    ports:
      - 8085:8080
      - 9644:9644
    networks:
      - meteroid_net
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:29092"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
    depends_on:
      - redpanda
    profiles:
      - metering

  redpanda-topic-create:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.1
    depends_on:
      - redpanda
    entrypoint: [ "bash", "-c", "sleep 5 && rpk topic create meteroid-events-raw --brokers redpanda:29092" ]
    networks:
      - meteroid_net
    profiles:
      - metering

