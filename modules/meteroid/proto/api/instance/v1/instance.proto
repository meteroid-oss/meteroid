syntax = "proto3";

package meteroid.api.instance.v1;

message GetInstanceRequest {}
message GetInstanceResponse {
  bool multi_organization_enabled = 1;
  bool instance_initiated = 2;
  bool skip_email_validation = 3;
  optional string google_oauth_client_id = 6;
  optional string hubspot_oauth_client_id = 7;
  optional string pennylane_oauth_client_id = 8;
}

message GetInviteRequest {}

message GetInviteResponse {
  string invite_hash = 1;
}

message GetOrganizationByInviteLinkRequest {
  string invite_key = 1;
}

message GetOrganizationByInviteLinkResponse {
  string organization_name = 1;
}

message GetCountriesRequest {}

message GetCountriesResponse {
  repeated Country countries = 1;

  message Country {
    string code = 1;
    string name = 2;
    string currency = 3;
  }
}

message GetCurrenciesRequest {}

message GetCurrenciesResponse {
  repeated Currency currencies = 1;

  message Currency {
    string code = 1;
    string name = 2;
    string symbol = 3;
    uint32 precision = 4;
  }
}

service InstanceService {
  rpc GetInstance(GetInstanceRequest) returns (GetInstanceResponse) {}
  rpc GetInvite(GetInviteRequest) returns (GetInviteResponse) {}
  rpc GetOrganizationByInviteLink(GetOrganizationByInviteLinkRequest) returns (GetOrganizationByInviteLinkResponse) {}
  rpc GetCountries(GetCountriesRequest) returns (GetCountriesResponse) {}
  rpc GetCurrencies(GetCurrenciesRequest) returns (GetCurrenciesResponse) {}
}
