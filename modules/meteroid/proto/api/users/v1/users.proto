syntax = "proto3";

package meteroid.api.users.v1;

import "api/organizations/v1/models.proto";
import "api/users/v1/models.proto";

message GetUserByIdRequest {
  string id = 1;
}

message GetUserByIdResponse {
  UserWithRole user = 1;
}

message ListUsersRequest {}

message ListUsersResponse {
  repeated UserWithRole users = 1;
}

message MeRequest {}

message MeResponse {
  User user = 1;
  repeated meteroid.api.organizations.v1.Organization organizations = 2;
  optional OrganizationUserRole current_organization_role = 3;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string token = 1;
  User user = 2;
}


message InitRegistrationRequest {
  string email = 1;
  optional string invite_key = 2;
}

message InitRegistrationResponse {
  bool validation_required = 1;
}

message CompleteRegistrationRequest {
  string email = 1;
  string password = 2;
  optional string validation_token = 3;
  // only if not validation_required
  optional string invite_key = 4;
}

message CompleteRegistrationResponse {
  string token = 1;
  User user = 2;
}


message OnboardMeRequest {
  optional string first_name = 1;
  optional string last_name = 2;
  optional string department = 3;
  optional string know_us_from = 4;
}

message OnboardMeResponse {
  User user = 1;
}

message InitResetPasswordRequest {
  string email = 1;
}

message InitResetPasswordResponse {}

message ResetPasswordRequest {
  string token = 1;
  string new_password = 2;
}

message ResetPasswordResponse {}

service UsersService {
  rpc Me(MeRequest) returns (MeResponse) {}
  rpc OnboardMe(OnboardMeRequest) returns (OnboardMeResponse) {}
  rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse) {}
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {}

  rpc Login(LoginRequest) returns (LoginResponse) {}

  rpc InitRegistration(InitRegistrationRequest) returns (InitRegistrationResponse) {}
  rpc CompleteRegistration(CompleteRegistrationRequest) returns (CompleteRegistrationResponse) {}

  rpc InitResetPassword(InitResetPasswordRequest) returns (InitResetPasswordResponse) {}
  rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse) {}
}
